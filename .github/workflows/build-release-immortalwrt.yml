name: Build ImmortalWrt Release

on:
 # schedule:
 #   - cron: "0 2 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

env:
  VERSION: "18.06-SNAPSHOT"
  BOARD: "ramips"
  SUBTARGET: "rt305x"
  PROFILE: "unbranded_wr512-3gn-8m"
  PACKAGES_TYPE1: "-wpad-basic-openssl luci luci-theme-material kmod-wireguard luci-app-wireguard wireguard-tools luci-proto-wireguard  -ip6tables -odhcp6c -kmod-ipv6 -kmod-ip6tables -odhcpd-ipv6only -ppp -ppp-mod-pppoe -opkg -luci-app-cpufreq"
  PACKAGES_TYPE2: "-wpad-basic-openssl uhttpd uhttpd-mod-ubus libiwinfo-lua luci-base luci-app-firewall luci-mod-admin-full luci-theme-material kmod-wireguard luci-app-wireguard wireguard-tools luci-proto-wireguard -ip6tables -odhcp6c -kmod-ipv6 -kmod-ip6tables -odhcpd-ipv6only -ppp -ppp-mod-pppoe -opkg -luci-app-cpufreq"    
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir
    - name: Download imagebuilder
      working-directory: /mnt/workdir
      run: |
        curl -O "https://downloads.immortalwrt.org/releases/${{ env.VERSION }}/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/immortalwrt-imagebuilder-${{ env.VERSION }}-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64.tar.xz"
        tar xvaf immortalwrt-imagebuilder-${{ env.VERSION }}-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64.tar.xz
        ln -sf /mnt/workdir/immortalwrt-imagebuilder-${{ env.VERSION }}-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64 $GITHUB_WORKSPACE/immortalwrt
 
    # Pull the first six letters from the version.buildinfo-file for naming the release e. g. "R16767"
    - name: Download version info
      run: 
        echo "IMMORTALWRT_VERSION=${{ env.VERSION }}" >> $GITHUB_ENV 
     
    - name: Include External ipk-Packages
      run: |
        wget -O packages.txt https://github.com/minax007/packages/raw/main/external-package-urls.txt
        cat packages.txt | xargs wget -P /mnt/workdir/immortalwrt-imagebuilder-${{ env.VERSION }}-${{ env.BOARD }}-${{ env.SUBTARGET }}.Linux-x86_64/packages
        
    - name: Build the image of type 1
      id: type1
      run: |
        cd immortalwrt
        make image PROFILE="${{ env.PROFILE }}" PACKAGES="${{ env.PACKAGES_TYPE1 }}"
        mv bin/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/immortalwrt-${{ env.VERSION }}-${{ env.BOARD }}-${{ env.SUBTARGET }}-${{ env.PROFILE }}-squashfs-sysupgrade.bin ImmortalWrt_WR512-3GN-4M_${{ env.VERSION }}_sysupgrade.bin
    - name: Build the image of type 2
      id: type2
      run: |
        cd immortalwrt
        make image PROFILE="${{ env.PROFILE }}" PACKAGES="${{ env.PACKAGES_TYPE2 }}"
        mv bin/targets/${{ env.BOARD }}/${{ env.SUBTARGET }}/immortalwrt-${{ env.VERSION }}-${{ env.BOARD }}-${{ env.SUBTARGET }}-${{ env.PROFILE }}-squashfs-sysupgrade.bin ImmortalWrt_WR512-3GN-4M_${{ env.VERSION }}_MINI_sysupgrade.bin


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}_release
        release_name: ImmortalWrt WR512-3GN-4M (${{ env.VERSION }}) release
        body: |
          This release is based on ImmortalWrt ${{ env.VERSION }}.
                    
        draft: false
        prerelease: false

    - name: Upload type1 Asset
      id: upload-release-asset-type1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: immortalwrt/ImmortalWrt_WR512-3GN-4M_${{ env.VERSION }}_sysupgrade.bin
        asset_name: ImmortalWrt_WR512-3GN-4M_${{ env.VERSION }}_sysupgrade.bin
        asset_content_type: application/bin

    - name: Upload type2 Asset
      id: upload-release-asset-type2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: immortalwrt/ImmortalWrt_WR512-3GN-4M_${{ env.VERSION }}_MINI_sysupgrade.bin
        asset_name: ImmortalWrt_WR512-3GN-4M_${{ env.VERSION }}_MINI_sysupgrade.bin
        asset_content_type: application/bin
